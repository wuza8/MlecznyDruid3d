{"mappings":"ACCA,KAAO,EACP,KAAO,EAKP,UAAY,AAAI,MAAM","sources":["<anon>","src/js/labirynth.js"],"sourcesContent":["rows = 5;\ncols = 5;\n//Labirynth single entry is an string that says where you can go from it U-up R-right D-down L-left\n//special are S-start and E-end\nlabirynth = new Array(rows);\nfunction createLabirynth() {\n    for(var i1 = 0; i1 < rows; i1++)labirynth[i1] = new Array(cols);\n    for(i1 = 0; i1 < rows; i1++)for(j = 0; j < cols; j++)labirynth[i1][j] = {\n        up: false,\n        down: false,\n        left: false,\n        right: false,\n        special: false,\n        start: false,\n        exit: false,\n        hall: false\n    };\n    labirynth[0][0].start = true;\n    labirynth[0][0].down = true;\n    labirynth[0][0].special = true;\n    labirynth[rows - 1][cols - 1].exit = true;\n    labirynth[rows - 1][cols - 1].left = true;\n    labirynth[rows - 1][cols - 1].special = true;\n    pointer = {\n        x: 0,\n        y: 0\n    };\n    labirynth[1][0].down = true;\n    labirynth[1][0].up = true;\n    labirynth[2][0].right = true;\n    labirynth[2][0].up = true;\n    labirynth[2][1].left = true;\n    labirynth[2][1].up = true;\n    labirynth[2][1].down = true;\n    labirynth[3][1].left = true;\n    labirynth[3][1].up = true;\n    labirynth[3][4].up = true;\n    labirynth[3][0].right = true;\n    labirynth[3][0].down = true;\n    labirynth[4][0].hall = true;\n    labirynth[4][0].right = true;\n    labirynth[4][0].up = true;\n    labirynth[4][0].special = true;\n    labirynth[4][1].left = true;\n    labirynth[4][1].right = true;\n    labirynth[4][2].hall = true;\n    labirynth[4][2].left = true;\n    labirynth[4][2].special = true;\n    labirynth[1][1].down = true;\n    labirynth[1][1].right = true;\n    labirynth[1][2].hall = true;\n    labirynth[1][2].left = true;\n    labirynth[1][2].up = true;\n    labirynth[1][2].special = true;\n    labirynth[0][2].down = true;\n    labirynth[0][2].left = true;\n    labirynth[0][2].right = true;\n    labirynth[0][1].right = true;\n    labirynth[0][3].left = true;\n    labirynth[0][3].right = true;\n    labirynth[0][4].left = true;\n    labirynth[0][4].down = true;\n    labirynth[1][4].up = true;\n    labirynth[1][4].down = true;\n    labirynth[2][4].up = true;\n    labirynth[2][4].down = true;\n    labirynth[2][4].left = true;\n    labirynth[2][3].right = true;\n    labirynth[2][3].up = true;\n    labirynth[2][3].down = true;\n    labirynth[1][3].down = true;\n    labirynth[1][3].up = false;\n    labirynth[3][3].hall = true;\n    labirynth[3][3].up = true;\n    labirynth[3][3].down = true;\n    labirynth[3][3].special = true;\n    labirynth[4][3].up = true;\n    labirynth[4][3].right = true;\n}\nfunction printLabirynth() {\n    string = \"\";\n    for(i = 0; i < rows; i++)for(b = 0; b < 3; b++){\n        for(j = 0; j < cols; j++){\n            let tile = labirynth[i][j];\n            if (b == 0) {\n                if (!tile.special) {\n                    if (tile.up) string += \"# #\";\n                    else string += \"###\";\n                }\n                if (tile.special) string += \"   \";\n            } else if (b == 1) {\n                if (!tile.special) {\n                    if (tile.left) string += \"  \";\n                    else if (!tile.right && !tile.down && !tile.right) string += \"##\";\n                    else string += \"# \";\n                }\n                if (!tile.special) {\n                    if (tile.right) string += \" \";\n                    else string += \"#\";\n                }\n                if (tile.start) string += \" S \";\n                if (tile.exit) string += \" E \";\n                if (tile.hall) string += \"   \";\n            } else {\n                if (!tile.special) {\n                    if (tile.down) string += \"# #\";\n                    else string += \"###\";\n                }\n                if (tile.special) string += \"   \";\n            }\n        }\n        string += \"\\n\";\n    }\n    console.log(string);\n}\nfunction makeWorld(comnats, scene) {\n    createLabirynth();\n    printLabirynth();\n    for(i = 0; i < rows; i++)for(j = 0; j < cols; j++){\n        let cell = labirynth[i][j];\n        if (cell.hall || cell.start || cell.exit) comnats.children.forEach((c)=>{\n            if (c.name == \"Hall\") {\n                let newHall = c.clone();\n                scene.add(newHall);\n                newHall.position.x = i * 20;\n                newHall.position.z = j * 20;\n                if (cell.right) newHall.children[8].translateY(500);\n                if (cell.up) newHall.children[9].translateY(500);\n                if (cell.left) newHall.children[10].translateY(500);\n                if (cell.down) newHall.children[11].translateY(500);\n            }\n        });\n        if (cell.up && cell.down && !cell.right && !cell.left && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"IShape\") {\n                let newIshape = c.clone();\n                scene.add(newIshape);\n                newIshape.position.x = i * 20;\n                newIshape.position.z = j * 20;\n            }\n        });\n        if (!cell.up && !cell.down && cell.right && cell.left && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"IShape\") {\n                let newIshape = c.clone();\n                scene.add(newIshape);\n                newIshape.position.x = i * 20;\n                newIshape.position.z = j * 20;\n                newIshape.rotateY(Math.PI / 2);\n            }\n        });\n        if (cell.up && cell.right && !cell.down && !cell.left && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"LShape\") {\n                let newLshape = c.clone();\n                scene.add(newLshape);\n                newLshape.position.x = i * 20;\n                newLshape.position.z = j * 20;\n            }\n        });\n        if (cell.up && cell.left && !cell.down && !cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"LShape\") {\n                let newLshape = c.clone();\n                scene.add(newLshape);\n                newLshape.position.x = i * 20;\n                newLshape.position.z = j * 20;\n                newLshape.rotateZ(Math.PI / 2);\n            }\n        });\n        if (!cell.up && cell.left && cell.down && !cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"LShape\") {\n                let newLshape = c.clone();\n                scene.add(newLshape);\n                newLshape.position.x = i * 20;\n                newLshape.position.z = j * 20;\n                newLshape.rotateZ(Math.PI);\n            }\n        });\n        if (cell.right && cell.down && !cell.left && !cell.up && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"LShape\") {\n                let newLshape = c.clone();\n                scene.add(newLshape);\n                newLshape.position.x = i * 20;\n                newLshape.position.z = j * 20;\n                newLshape.rotateZ(Math.PI / 2 * 3);\n            }\n        });\n        if (cell.left && cell.up && cell.down && !cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"TShape\") {\n                let newTshape = c.clone();\n                scene.add(newTshape);\n                newTshape.position.x = i * 20;\n                newTshape.position.z = j * 20;\n                newTshape.rotateZ(Math.PI);\n            }\n        });\n        if (cell.left && !cell.up && cell.down && cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"TShape\") {\n                let newTshape = c.clone();\n                scene.add(newTshape);\n                newTshape.position.x = i * 20;\n                newTshape.position.z = j * 20;\n                newTshape.rotateZ(Math.PI / 2 * 3);\n            }\n        });\n        if (!cell.left && cell.up && cell.down && cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"TShape\") {\n                let newTshape = c.clone();\n                scene.add(newTshape);\n                newTshape.position.x = i * 20;\n                newTshape.position.z = j * 20;\n            }\n        });\n        if (!cell.left && !cell.up && !cell.down && cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"End\") {\n                let newEndshape = c.clone();\n                scene.add(newEndshape);\n                newEndshape.position.x = i * 20;\n                newEndshape.position.z = j * 20;\n                newEndshape.rotateY(Math.PI / 2);\n            }\n        });\n        if (!cell.left && cell.up && !cell.down && !cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"End\") {\n                let newEndshape = c.clone();\n                scene.add(newEndshape);\n                newEndshape.position.x = i * 20;\n                newEndshape.position.z = j * 20;\n            }\n        });\n        if (!cell.left && !cell.up && cell.down && !cell.right && !cell.special) comnats.children.forEach((c)=>{\n            if (c.name == \"End\") {\n                let newEndshape = c.clone();\n                scene.add(newEndshape);\n                newEndshape.position.x = i * 20;\n                newEndshape.position.z = j * 20;\n                newEndshape.rotateY(Math.PI);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=index.6b09e3b1.js.map\n","\r\nrows = 5;\r\ncols = 5;\r\n\r\n//Labirynth single entry is an string that says where you can go from it U-up R-right D-down L-left\r\n//special are S-start and E-end\r\n\r\nlabirynth = new Array(rows);\r\n\r\nfunction createLabirynth(){\r\n\r\n    for (var i = 0; i < rows; i++) {\r\n        labirynth[i] = new Array(cols);\r\n    }\r\n\r\n    for(i=0;i<rows; i++) {\r\n        for(j=0;j<cols; j++) {\r\n            labirynth[i][j] = {up: false, down: false, left: false, right: false, special: false,  start: false, exit: false, hall: false};\r\n        }\r\n    }\r\n\r\n    labirynth[0][0].start = true;\r\n    labirynth[0][0].down=true;\r\n    labirynth[0][0].special = true;\r\n\r\n    labirynth[rows-1][cols-1].exit = true;\r\n    labirynth[rows-1][cols-1].left=true;\r\n    labirynth[rows-1][cols-1].special = true;\r\n\r\n    pointer = {x: 0, y: 0};\r\n\r\n    labirynth[1][0].down=true;\r\n    labirynth[1][0].up=true;\r\n\r\n    labirynth[2][0].right=true;\r\n    labirynth[2][0].up=true;\r\n\r\n    labirynth[2][1].left=true;\r\n    labirynth[2][1].up=true;\r\n    labirynth[2][1].down=true;\r\n\r\n    labirynth[3][1].left=true;\r\n    labirynth[3][1].up=true;\r\n\r\n    labirynth[3][4].up=true;\r\n\r\n    labirynth[3][0].right=true;\r\n    labirynth[3][0].down=true;\r\n\r\n    labirynth[4][0].hall=true;\r\n    labirynth[4][0].right=true;\r\n    labirynth[4][0].up=true;\r\n    labirynth[4][0].special=true;\r\n\r\n    labirynth[4][1].left=true;\r\n    labirynth[4][1].right=true;\r\n\r\n    labirynth[4][2].hall=true;\r\n    labirynth[4][2].left=true;\r\n    labirynth[4][2].special=true;\r\n\r\n    labirynth[1][1].down=true;\r\n    labirynth[1][1].right=true;\r\n\r\n    labirynth[1][2].hall=true;\r\n    labirynth[1][2].left=true;\r\n    labirynth[1][2].up=true;\r\n    labirynth[1][2].special=true;\r\n\r\n    labirynth[0][2].down=true;\r\n    labirynth[0][2].left=true;\r\n    labirynth[0][2].right=true;\r\n\r\n    labirynth[0][1].right=true;\r\n\r\n    labirynth[0][3].left=true;\r\n    labirynth[0][3].right=true;\r\n\r\n    labirynth[0][4].left=true;\r\n    labirynth[0][4].down=true;\r\n\r\n    labirynth[1][4].up=true;\r\n    labirynth[1][4].down=true;\r\n\r\n    labirynth[2][4].up=true;\r\n    labirynth[2][4].down=true;\r\n    labirynth[2][4].left=true;\r\n\r\n    labirynth[2][3].right=true;\r\n    labirynth[2][3].up=true;\r\n    labirynth[2][3].down=true;\r\n\r\n    labirynth[1][3].down=true;\r\n    labirynth[1][3].up=false;\r\n\r\n    labirynth[3][3].hall=true;\r\n    labirynth[3][3].up=true;\r\n    labirynth[3][3].down=true;\r\n    labirynth[3][3].special=true;\r\n\r\n    labirynth[4][3].up=true;\r\n    labirynth[4][3].right=true;\r\n}\r\n\r\nfunction printLabirynth(){\r\n    string = \"\";\r\n\r\n    for(i=0;i<rows; i++) {\r\n        for(b=0;b<3;b++) {\r\n            for(j=0;j<cols; j++) {\r\n                let tile = labirynth[i][j];\r\n\r\n                if(b==0) {\r\n                    if(!tile.special)\r\n                    if(tile.up){\r\n                        string += \"# #\";\r\n                    }\r\n                    else{\r\n                        string += \"###\";\r\n                    }\r\n\r\n                    if(tile.special){\r\n                        string += \"   \";\r\n                    }\r\n                }\r\n                else if(b==1){\r\n                    if(!tile.special)\r\n                    if(tile.left){\r\n                        string += \"  \";\r\n                    }\r\n                    else{\r\n                        if(!tile.right && !tile.down && !tile.right)\r\n                            string += \"##\";\r\n                        else\r\n                            string += \"# \";\r\n                    }\r\n\r\n                    if(!tile.special)\r\n                    if(tile.right){\r\n                        string += \" \";\r\n                    }\r\n                    else{\r\n                        string += \"#\";\r\n                    }\r\n\r\n                    if(tile.start){\r\n                        string += \" S \";\r\n                    }\r\n                    if(tile.exit){\r\n                        string += \" E \";\r\n                    }\r\n                    if(tile.hall){\r\n                        string += \"   \";\r\n                    }\r\n                }\r\n                else{\r\n                    if(!tile.special)\r\n                    if(tile.down){\r\n                        string += \"# #\";\r\n                    }\r\n                    else{\r\n                        string += \"###\";\r\n                    }\r\n\r\n                    if(tile.special){\r\n                        string += \"   \";\r\n                    }\r\n                }\r\n            }\r\n            string += \"\\n\";\r\n        }\r\n        \r\n    }\r\n    console.log(string);\r\n}\r\n\r\n\r\n\r\nfunction makeWorld(comnats, scene){\r\n    createLabirynth();\r\n    printLabirynth(); \r\n\r\n    for(i=0; i<rows;i++){\r\n        for(j=0;j<cols;j++){\r\n            let cell = labirynth[i][j];\r\n\r\n            if(cell.hall || cell.start || cell.exit){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"Hall\"){\r\n                        let newHall = c.clone();\r\n                        scene.add(newHall);\r\n                        newHall.position.x = i*20;\r\n                        newHall.position.z = j*20;\r\n                        if(cell.right)\r\n                            newHall.children[8].translateY(500);\r\n                        if(cell.up)\r\n                            newHall.children[9].translateY(500);\r\n                        if(cell.left)\r\n                            newHall.children[10].translateY(500);\r\n                        if(cell.down)\r\n                            newHall.children[11].translateY(500);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(cell.up && cell.down && !cell.right && !cell.left && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"IShape\"){\r\n                        let newIshape = c.clone();\r\n                        scene.add(newIshape);\r\n                        newIshape.position.x = i*20;\r\n                        newIshape.position.z = j*20;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(!cell.up && !cell.down && cell.right && cell.left && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"IShape\"){\r\n                        let newIshape = c.clone();\r\n                        scene.add(newIshape);\r\n                        newIshape.position.x = i*20;\r\n                        newIshape.position.z = j*20;\r\n                        newIshape.rotateY(Math.PI/2);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(cell.up && cell.right && !cell.down && !cell.left && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"LShape\"){\r\n                        let newLshape = c.clone();\r\n                        scene.add(newLshape);\r\n                        newLshape.position.x = i*20;\r\n                        newLshape.position.z = j*20;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(cell.up && cell.left && !cell.down && !cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"LShape\"){\r\n                        let newLshape = c.clone();\r\n                        scene.add(newLshape);\r\n                        newLshape.position.x = i*20;\r\n                        newLshape.position.z = j*20;\r\n                        newLshape.rotateZ(Math.PI/2);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(!cell.up && cell.left && cell.down && !cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"LShape\"){\r\n                        let newLshape = c.clone();\r\n                        scene.add(newLshape);\r\n                        newLshape.position.x = i*20;\r\n                        newLshape.position.z = j*20;\r\n                        newLshape.rotateZ(Math.PI);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(cell.right && cell.down && !cell.left && !cell.up && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"LShape\"){\r\n                        let newLshape = c.clone();\r\n                        scene.add(newLshape);\r\n                        newLshape.position.x = i*20;\r\n                        newLshape.position.z = j*20;\r\n                        newLshape.rotateZ(Math.PI/2*3);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(cell.left && cell.up && cell.down && !cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"TShape\"){\r\n                        let newTshape = c.clone();\r\n                        scene.add(newTshape);\r\n                        newTshape.position.x = i*20;\r\n                        newTshape.position.z = j*20;\r\n                        newTshape.rotateZ(Math.PI);\r\n                    }\r\n                })\r\n            }\r\n            if(cell.left && !cell.up && cell.down && cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"TShape\"){\r\n                        let newTshape = c.clone();\r\n                        scene.add(newTshape);\r\n                        newTshape.position.x = i*20;\r\n                        newTshape.position.z = j*20;\r\n                        newTshape.rotateZ(Math.PI/2*3);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(!cell.left && cell.up && cell.down && cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"TShape\"){\r\n                        let newTshape = c.clone();\r\n                        scene.add(newTshape);\r\n                        newTshape.position.x = i*20;\r\n                        newTshape.position.z = j*20;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(!cell.left && !cell.up && !cell.down && cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"End\"){\r\n                        let newEndshape = c.clone();\r\n                        scene.add(newEndshape);\r\n                        newEndshape.position.x = i*20;\r\n                        newEndshape.position.z = j*20;\r\n                        newEndshape.rotateY(Math.PI/2);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(!cell.left && cell.up && !cell.down && !cell.right && !cell.special){\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"End\"){\r\n                        let newEndshape = c.clone();\r\n                        scene.add(newEndshape);\r\n                        newEndshape.position.x = i*20;\r\n                        newEndshape.position.z = j*20;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(!cell.left && !cell.up && cell.down && !cell.right && !cell.special) {\r\n                comnats.children.forEach(c => {\r\n                    if(c.name == \"End\"){\r\n                        let newEndshape = c.clone();\r\n                        scene.add(newEndshape);\r\n                        newEndshape.position.x = i*20;\r\n                        newEndshape.position.z = j*20;\r\n                        newEndshape.rotateY(Math.PI);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"names":["rows","cols","labirynth","Array"],"version":3,"file":"index.6b09e3b1.js.map"}